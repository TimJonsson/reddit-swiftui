version: 2.1

## Chagne to trigger cache

executors:
  mac-executor:
    macos:
      xcode: "13.4.1"
    working_directory: /Users/distiller/project

aliases:
  - &restore_git_cache
      name: Restore GIT cache
      keys:
        - source-v1-{{ .Branch }}-{{ .Revision }}
        - source-v1-{{ .Branch }}-
        - source-v1-
  - &save_git_cache
      name: Save GIT cache
      key: source-v1-{{ .Branch }}-{{ .Revision }}
      paths:
        - .git

  - &restore_gem_cache
      name: Restore gem cache
      keys:
      - gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - gem-cache-v1-{{ arch }}-{{ .Branch }}
      - gem-cache-v1
  - &save_gem_cache
      name: Save gem cache
      key: gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      paths:
        - vendor/bundle
  - &bundle_install
      name: Install Gems via Bundler
      command: bundle install --path vendor/bundle

jobs:
  run-unit-tests:
    executor:
      name: mac-executor
    environment:
      FASTLANE_LANE: run_unit_tests
    shell: /bin/bash --login -o pipefail
    steps:
      - restore_cache: *restore_git_cache
      - checkout
      - save_cache: *save_git_cache
      - restore_cache: *restore_gem_cache 
      - run: bundle install
      - run: bundle clean --force
      - save_cache: *save_gem_cache
      - run:
          name: "run unit tests"
          command: "bundle exec fastlane $FASTLANE_LANE"
      - store_artifacts:
          path: output
      - store_test_results:
          path: output/unit_tests

  run-ui-tests:
    executor:
      name: mac-executor
    environment: 
      FASTLANE_LANE: run_ui_tests
    shell: /bin/bash --login -o pipefail
    steps:
      - restore_cache: *restore_git_cache
      - checkout
      - save_cache: *save_git_cache
      - restore_cache: *restore_gem_cache 
      - run: bundle install
      - run: bundle clean --force
      - save_cache: *save_gem_cache
      - run:
          name: "run ui tests"
          command: "bundle exec fastlane $FASTLANE_LANE"
      - store_artifacts:
          path: output
      - store_test_results:
          path: output/ui_tests
workflows:
  build-and-run-tests:
    jobs:
      - run-unit-tests
      - run-ui-tests:
          requires:
            - run-unit-tests